# Generated by Django 3.0.8 on 2021-01-14 13:51

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('username', models.CharField(default='', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False, verbose_name='teacher status')),
                ('is_nonteacher', models.BooleanField(default=False, verbose_name='Non teaching staff status')),
                ('is_supervisor', models.BooleanField(default=False, verbose_name='Supervisor status')),
                ('is_viceprincipal', models.BooleanField(default=False, verbose_name='Viceprincipal status')),
                ('is_principal', models.BooleanField(default=False, verbose_name='Principal status')),
                ('is_secretary', models.BooleanField(default=False, verbose_name='Secretary status')),
                ('type', models.CharField(choices=[('teachingstaff', 'teachingstaff'), ('nonteachingstaff', 'nonteachingstaff'), ('supervisor', 'supervisor'), ('viceprincipal', 'viceprincipal'), ('principal', 'principal'), ('secretary', 'secretary')], max_length=50, verbose_name='Types')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Picker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickuser', models.ManyToManyField(related_name='pickuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_at_date', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(blank=True, null=True)),
                ('stafftype', models.CharField(choices=[('Teacher', 'Teacher'), ('Nonteacher', 'Nonteacher')], default='Nonteacher', max_length=100, verbose_name='Staff Type')),
                ('emergencytype', models.CharField(choices=[('Sick Leave', 'Sick Leave'), ('Annual Leave', 'Annual Leave'), ('Casual Leave', 'Casual Leave')], default='Sick Leave', max_length=100, verbose_name='Type of Leave')),
                ('officialtype', models.CharField(choices=[('Official Leave (In School)', 'Official Leave (In School)'), ('Official Leave (Outside)', 'Official Leave (Outside)')], default='Official Leave (In School)', max_length=100, verbose_name='Type of Leave')),
                ('groupapplystatus', models.BooleanField(default=False, verbose_name='Group apply status')),
                ('alltimeofftype', models.CharField(choices=[('Sick Leave', 'Sick Leave'), ('Official Leave (In School)', 'Official Leave (In School)'), ('Official Leave (Outside)', 'Official Leave (Outside)'), ('Annual Leave', 'Annual Leave'), ('Casual Leave', 'Casual Leave'), ('Over Time', 'Over Time'), ('Special Tuberculosis Leave', 'Special Tuberculosis Leave'), ('Maternal Leave', 'Maternal Leave'), ('No-Pay Leave', 'No-Pay Leave'), ('Paternity Leave', 'Paternity Leave'), ('Study Leave', 'Study Leave'), ('Jurors or Witnesses', 'Jurors or Witnesses'), ('Leave for Special Events', 'Leave for Special Events'), ('Others', 'Others')], default='Sick Leave', max_length=100, verbose_name='All Type of Leave')),
                ('teachertimeofftype', models.CharField(choices=[('Sick Leave', 'Sick Leave'), ('Official Leave (In School)', 'Official Leave (In School)'), ('Official Leave (Outside)', 'Official Leave (Outside)'), ('Casual Leave', 'Casual Leave'), ('Special Tuberculosis Leave', 'Special Tuberculosis Leave'), ('Maternal Leave', 'Maternal Leave'), ('No-Pay Leave', 'No-Pay Leave'), ('Paternity Leave', 'Paternity Leave'), ('Study Leave', 'Study Leave'), ('Jurors or Witnesses', 'Jurors or Witnesses'), ('Leave for Special Events', 'Leave for Special Events'), ('Others', 'Others')], default='Sick Leave', max_length=100, verbose_name='Type of Leave')),
                ('nonteachertimeofftype', models.CharField(choices=[('Sick Leave', 'Sick Leave'), ('Official Leave (In School)', 'Official Leave (In School)'), ('Official Leave (Outside)', 'Official Leave (Outside)'), ('Annual Leave', 'Annual Leave'), ('Over Time', 'Over Time'), ('Special Tuberculosis Leave', 'Special Tuberculosis Leave'), ('Maternal Leave', 'Maternal Leave'), ('No-Pay Leave', 'No-Pay Leave'), ('Paternity Leave', 'Paternity Leave'), ('Jurors or Witnesses', 'Jurors or Witnesses'), ('Others', 'Others')], default='Sick Leave', max_length=100, verbose_name='Type of Leave')),
                ('nonteacherchangetimeofftype', models.CharField(blank=True, choices=[('Annual Leave', 'Annual Leave'), ('Over Time', 'Over Time'), ('No-Pay Leave', 'No-Pay Leave')], max_length=100, null=True, verbose_name='Change Leave Type')),
                ('teacherchangetimeofftype', models.CharField(blank=True, choices=[('Over Time', 'Casual Leave'), ('No-Pay Leave', 'No-Pay Leave')], max_length=100, null=True, verbose_name='Change Leave Type')),
                ('startdate', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 541589, tzinfo=utc))),
                ('starttime', models.TimeField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 541621, tzinfo=utc), null=True)),
                ('enddate', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 541645, tzinfo=utc))),
                ('endtime', models.TimeField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 541664, tzinfo=utc), null=True)),
                ('duration', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Days')),
                ('totalhr', models.DecimalField(decimal_places=0, default=0, max_digits=65, verbose_name='Total Hours')),
                ('period', models.CharField(blank=True, max_length=100, null=True, verbose_name='Period')),
                ('reason', models.CharField(default='', max_length=200)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('attachmentrequired', models.BooleanField(default=False, verbose_name='Attachment Required')),
                ('attachmentreceived', models.BooleanField(default=False, verbose_name='Attachment Received')),
                ('calendarcheck', models.BooleanField(default=False, verbose_name='calendar check')),
                ('firststatus', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled')], default='Pending', max_length=20, verbose_name='Decision')),
                ('firstcomment', models.CharField(blank=True, max_length=200, verbose_name='Comment')),
                ('secondstatus', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled')], default='Pending', max_length=20, verbose_name='Decision')),
                ('secondcomment', models.CharField(blank=True, max_length=200, verbose_name='Comment')),
                ('secretarystatus', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled')], default='Pending', max_length=20, verbose_name='Decision')),
                ('secretaryduration', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Modified duration (hr for OT, else use days)')),
                ('secretarycomment', models.CharField(blank=True, max_length=200, verbose_name='Comment')),
                ('finalstatus', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled')], default='Pending', max_length=20, verbose_name='Decision')),
                ('finalduration', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Modified duration (hr for OT, else use days)')),
                ('finalcomment', models.CharField(blank=True, max_length=200, verbose_name='Comment')),
                ('appliedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appliedby', to=settings.AUTH_USER_MODEL)),
                ('pickmanager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickmanager', to=settings.AUTH_USER_MODEL)),
                ('pickvp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickvp', to=settings.AUTH_USER_MODEL)),
                ('secondapprovedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondapprovedby', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IncrementAll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 546746, tzinfo=utc))),
                ('added', models.DecimalField(decimal_places=0, default=0, max_digits=2)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NonTeachingStaff',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='Principal',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='Secretary',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='TeachingStaff',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='VicePrincipal',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('customstaff.user',),
        ),
        migrations.CreateModel(
            name='VicePrincipalDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sickleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Sick Leave Balance')),
                ('maxsickleave', models.DecimalField(decimal_places=1, default=168, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Max. Sick Leave')),
                ('sickleavecounter', models.DecimalField(decimal_places=1, default=0, max_digits=60, verbose_name='Sick Leave Total')),
                ('casualleave', models.DecimalField(decimal_places=2, default=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Casual Leave Balance')),
                ('firstday', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 539561, tzinfo=utc))),
                ('increment', models.DecimalField(decimal_places=0, default=0, max_digits=2, verbose_name='Sick Leave Increment')),
                ('is_teacher', models.BooleanField(default=True, verbose_name='teacher status')),
                ('is_viceprincipal', models.BooleanField(default=True, verbose_name='VicePrincipal status')),
                ('allvp', models.ManyToManyField(related_name='allvp', to='customstaff.VicePrincipal')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='VicePrincipalDetail', to='customstaff.VicePrincipal')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStaffDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sickleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Sick Leave Balance')),
                ('maxsickleave', models.DecimalField(decimal_places=1, default=168, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Max. Sick Leave')),
                ('sickleavecounter', models.DecimalField(decimal_places=1, default=0, max_digits=60, verbose_name='Sick Leave Total')),
                ('casualleave', models.DecimalField(decimal_places=2, default=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Casual Leave Balance')),
                ('firstday', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 536009, tzinfo=utc))),
                ('increment', models.DecimalField(decimal_places=0, default=0, max_digits=2, verbose_name='Sick Leave Increment')),
                ('is_teacher', models.BooleanField(default=True, verbose_name='teacher status')),
                ('is_viceprincipal', models.BooleanField(default=False, verbose_name='Viceprincipal status')),
                ('is_principal', models.BooleanField(default=False, verbose_name='Principal status')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customstaff.TeachingStaff')),
            ],
        ),
        migrations.CreateModel(
            name='SupervisorDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sickleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Sick Leave Balance')),
                ('maxsickleave', models.DecimalField(decimal_places=1, default=168, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Max. Sick Leave')),
                ('sickleavecounter', models.DecimalField(decimal_places=1, default=0, max_digits=60, verbose_name='Sick Leave Total')),
                ('casualleave', models.DecimalField(decimal_places=2, default=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Casual Leave Balance')),
                ('firstday', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 538285, tzinfo=utc))),
                ('increment', models.DecimalField(decimal_places=0, default=0, max_digits=2, verbose_name='Sick Leave Increment')),
                ('is_supervisor', models.BooleanField(default=True, verbose_name='Supervisor status')),
                ('is_teacher', models.BooleanField(default=True, verbose_name='Teacher status')),
                ('overseeing', models.ManyToManyField(blank=True, null=True, related_name='overseeing', to='customstaff.NonTeachingStaff')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SupervisorDetail', to='customstaff.Supervisor')),
            ],
        ),
        migrations.CreateModel(
            name='SecretaryDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sickleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Sick Leave Balance')),
                ('maxsickleave', models.DecimalField(decimal_places=1, default=128, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(128)], verbose_name='Max. Sick Leave')),
                ('sickleavecounter', models.DecimalField(decimal_places=1, default=0, max_digits=60, verbose_name='Sick Leave Total')),
                ('annualleave', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Annual Leave Balance')),
                ('maxannualleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Max. Annual Leave')),
                ('compensatedleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Compensated Leave Available (Hours)')),
                ('ratio', models.DecimalField(decimal_places=3, default=0, max_digits=4, verbose_name='Non-Teaching Ratio (100% nonteaching = 1)')),
                ('increment', models.DecimalField(decimal_places=0, default=0, max_digits=2, verbose_name='Sick Leave Increment')),
                ('firstday', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 537632, tzinfo=utc))),
                ('is_nonteacher', models.BooleanField(default=True, verbose_name='Non teaching staff status')),
                ('is_secretary', models.BooleanField(default=True, verbose_name='Secretary status')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customstaff.Secretary')),
            ],
        ),
        migrations.CreateModel(
            name='PrincipalDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_teacher', models.BooleanField(default=True, verbose_name='teacher status')),
                ('is_principal', models.BooleanField(default=True, verbose_name='Principal status')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PrincipalDetail', to='customstaff.Principal')),
            ],
        ),
        migrations.CreateModel(
            name='NonTeachingStaffDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sickleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)], verbose_name='Sick Leave Balance')),
                ('maxsickleave', models.DecimalField(decimal_places=1, default=128, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(128)], verbose_name='Max. Sick Leave')),
                ('sickleavecounter', models.DecimalField(decimal_places=1, default=0, max_digits=60, verbose_name='Sick Leave Total')),
                ('annualleave', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Annual Leave Balance')),
                ('maxannualleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Max. Annual Leave')),
                ('compensatedleave', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Compensated Leave Available (Hours)')),
                ('ratio', models.DecimalField(decimal_places=3, default=0, max_digits=4, verbose_name='Non-Teaching Ratio (100% nonteaching = 1)')),
                ('increment', models.DecimalField(decimal_places=0, default=0, max_digits=2, verbose_name='Sick Leave Increment')),
                ('firstday', models.DateField(default=datetime.datetime(2021, 1, 14, 13, 51, 42, 536772, tzinfo=utc))),
                ('is_nonteacher', models.BooleanField(default=True, verbose_name='Non teaching staff status')),
                ('is_secretary', models.BooleanField(default=False, verbose_name='Secretary status')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to='customstaff.Supervisor')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customstaff.NonTeachingStaff')),
            ],
        ),
    ]
